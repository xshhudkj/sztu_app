// Generated by view binder compiler. Do not edit!
package me.wcy.music.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.wcy.music.R;

public final class FragmentPhoneLoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnLogin;

  @NonNull
  public final TextInputEditText etPhone;

  @NonNull
  public final TextInputEditText etPhoneCode;

  @NonNull
  public final TextView tvQrcodeLogin;

  @NonNull
  public final TextView tvSendCode;

  private FragmentPhoneLoginBinding(@NonNull LinearLayout rootView, @NonNull Button btnLogin,
      @NonNull TextInputEditText etPhone, @NonNull TextInputEditText etPhoneCode,
      @NonNull TextView tvQrcodeLogin, @NonNull TextView tvSendCode) {
    this.rootView = rootView;
    this.btnLogin = btnLogin;
    this.etPhone = etPhone;
    this.etPhoneCode = etPhoneCode;
    this.tvQrcodeLogin = tvQrcodeLogin;
    this.tvSendCode = tvSendCode;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPhoneLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPhoneLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_phone_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPhoneLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLogin;
      Button btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.etPhone;
      TextInputEditText etPhone = ViewBindings.findChildViewById(rootView, id);
      if (etPhone == null) {
        break missingId;
      }

      id = R.id.etPhoneCode;
      TextInputEditText etPhoneCode = ViewBindings.findChildViewById(rootView, id);
      if (etPhoneCode == null) {
        break missingId;
      }

      id = R.id.tvQrcodeLogin;
      TextView tvQrcodeLogin = ViewBindings.findChildViewById(rootView, id);
      if (tvQrcodeLogin == null) {
        break missingId;
      }

      id = R.id.tvSendCode;
      TextView tvSendCode = ViewBindings.findChildViewById(rootView, id);
      if (tvSendCode == null) {
        break missingId;
      }

      return new FragmentPhoneLoginBinding((LinearLayout) rootView, btnLogin, etPhone, etPhoneCode,
          tvQrcodeLogin, tvSendCode);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
